spec:
  inputs:
    ci-image:
    ci-before-script:
    command:
      default: make
    arguments:
      default: build
    options:
      default: ''
    build-working-directory:
      default: .
    asset-working-directory:
      default: .
    asset-output-directory:
      default: build
    asset-name:
      default: main
---

stages:
  - nullplatform-asset-lambda-build

nullplatform-asset-lambda-build:
  image: $[[ inputs.ci-image ]]
  stage: nullplatform-asset-lambda-build
  before_script:
    - $[[ inputs.ci-before-script ]]
  script:
    - |+
      # Sanitize function
      sanitize_path() {
        local path="$1"
        # Remove "./" from the beginning of the path, but preserve "."
        if [ "$path" != "./" ]; then
          path="${path#./}"
        fi
        # Remove trailing slashes
        path="${path%/}"
        echo "$path"
      }
      # Sanitize paths
      echo "$[[ inputs.build-working-directory ]]"
      build_working_directory=$(sanitize_path "$[[ inputs.build-working-directory ]]")
      asset_working_directory=$(sanitize_path "$[[ inputs.asset-working-directory ]]")
      asset_output_directory=$(sanitize_path "$[[ inputs.asset-output-directory ]]")
      echo "$build_working_directory"
    - |+ 
      #build
      BUILD_WORKING_DIRECTORY=$build_working_directory
      ASSET_WORKING_DIRECTORY=$asset_working_directory
      ASSET_OUTPUT_DIRECTORY="$asset_working_directory/$asset_output_directory"
      ASSET_NAME=$[[ inputs.asset-name ]]
      ASSET_TYPE=lambda
      if [ "$[[ inputs.command ]]" != "make" ]; then
        echo "different of make"
      else
        make_file_path="$build_working_directory"
        make_file_task="build"
      
        build_command="make -C $make_file_path"
      
        if [ "$[[ inputs.arguments ]]" != "build" ]; then
          build_command="$build_command $[[ inputs.arguments ]]"
        else
          build_command="$build_command $make_file_task"
        fi
      
        if [ -n "$[[ inputs.options ]]" ]; then
          build_command="$build_command $[[ inputs.options ]]"
        fi
      
        eval $build_command \
        BUILD_WORKING_DIRECTORY=$BUILD_WORKING_DIRECTORY \
        ASSET_WORKING_DIRECTORY=$ASSET_WORKING_DIRECTORY \
        ASSET_OUTPUT_DIRECTORY=$ASSET_OUTPUT_DIRECTORY \
        ASSET_NAME=$ASSET_NAME \
        ASSET_TYPE=$ASSET_TYPE
      fi

  artifacts:
    paths:
      - "$[[ inputs.asset-working-directory ]]/$[[ inputs.asset-output-directory ]]"
    expire_in: 30 min
